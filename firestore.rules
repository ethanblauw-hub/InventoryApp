/**
 * @fileoverview Firestore Security Rules for PartTrack application.
 *
 * Core Philosophy:
 * This ruleset enforces a strict ownership model for Jobs and their associated BOMs.
 * Work Categories, Inventory Items, and Shelf Locations are accessible to all authenticated users.
 *
 * Data Structure:
 * - /jobs/{jobId}: Stores job details. Each job can have multiple BOMs.
 * - /jobs/{jobId}/boms/{bomId}: Stores bill of materials associated with a job.
 * - /workCategories/{workCategoryId}: Stores work categories.
 * - /inventoryItems/{inventoryItemId}: Stores inventory items.
 * - /shelfLocations/{shelfLocationId}: Stores shelf locations and associated inventory item IDs.
 *
 * Key Security Decisions:
 * - Only authenticated users can access the data.
 * - Listing all jobs is allowed for authenticated users, but creating, updating, and deleting jobs is disallowed.
 * - Only authenticated users can access work categories, inventory items, and shelf locations.
 * - Write operations are not permitted for jobs, boms, workCategories, inventoryItems, and shelfLocations.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows authenticated users to read job data.  Write operations are disallowed.
     * @path /jobs/{jobId}
     * @allow get, list: if isSignedIn();
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny create: if false; // Example of a denied operation.
     * @deny update: if false; // Example of a denied operation.
     * @deny delete: if false; // Example of a denied operation.
     * @principle Allows authenticated users to view jobs. Disallows any modifications.
     */
    match /jobs/{jobId} {
      allow get, list: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows authenticated users to read BOM data for a specific job.  Write operations are disallowed.
     * @path /jobs/{jobId}/boms/{bomId}
     * @allow get, list: if isSignedIn();
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny create: if false; // Example of a denied operation.
     * @deny update: if false; // Example of a denied operation.
     * @deny delete: if false; // Example of a denied operation.
     * @principle Allows authenticated users to view boms. Disallows any modifications.
     */
    match /jobs/{jobId}/boms/{bomId} {
      allow get, list: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
    
    /**
     * @description Allows authenticated users to read work category data.  Write operations are disallowed.
     * @path /workCategories/{workCategoryId}
     * @allow get, list: if isSignedIn();
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny create: if false; // Example of a denied operation.
     * @deny update: if false; // Example of a denied operation.
     * @deny delete: if false; // Example of a denied operation.
     * @principle Allows authenticated users to view work categories. Disallows any modifications.
     */
    match /workCategories/{workCategoryId} {
      allow get, list: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows authenticated users to read inventory item data.  Write operations are disallowed.
     * @path /inventoryItems/{inventoryItemId}
     * @allow get, list: if isSignedIn();
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny create: if false; // Example of a denied operation.
     * @deny update: if false; // Example of a denied operation.
     * @deny delete: if false; // Example of a denied operation.
     * @principle Allows authenticated users to view inventory items. Disallows any modifications.
     */
    match /inventoryItems/{inventoryItemId} {
      allow get, list: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows authenticated users to read shelf location data. Write operations are disallowed.
     * @path /shelfLocations/{shelfLocationId}
     * @allow get, list: if isSignedIn();
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny create: if false; // Example of a denied operation.
     * @deny update: if false; // Example of a denied operation.
     * @deny delete: if false; // Example of a denied operation.
     * @principle Allows authenticated users to view shelf locations. Disallows any modifications.
     */
    match /shelfLocations/{shelfLocationId} {
      allow get, list: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Checks if the user is signed in.
     * @return {bool} True if the user is signed in, false otherwise.
     * @example isSignedIn() == true
     */
    function isSignedIn() {
      return request.auth != null;
    }
  }
}
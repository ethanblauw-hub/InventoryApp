/**
 * @fileoverview Firestore Security Rules for PartTrack.
 *
 * Core Philosophy:
 * This ruleset enforces a security model based on path-based ownership and data denormalization.
 * Authorization independence is achieved through these methods.
 *
 * Data Structure:
 * - /jobs/{jobId}: Stores job-related information.
 * - /jobs/{jobId}/boms/{bomId}: Stores BOMs associated with a specific job.
 * - /itemCategories/{itemCategoryId}: Stores item categories.
 * - /inventoryItems/{inventoryItemId}: Stores inventory items.
 * - /shelfLocations/{shelfLocationId}: Stores shelf locations and their associated inventory items.
 *
 * Key Security Decisions:
 * - All collections require authentication for write access.
 * - Read access is generally public unless otherwise specified.
 * - Data validation is limited to authorization-critical fields.
 * - List operations are secured based on the collection type.
 *
 * Denormalization for Authorization:
 * - The structure uses denormalization of authorization context to simplify security rules.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Rules for the /jobs collection. Allows authenticated users to read, create, update, and delete jobs.
     * @path /jobs/{jobId}
     * @allow get, list: if true;
     * @allow create: if isSignedIn();
     * @allow update: if isSignedIn() && resource != null;
     * @allow delete: if isSignedIn() && resource != null;
     * @principle Allows authenticated users to manage jobs.
     */
    match /jobs/{jobId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;

      /**
       * @description Rules for the /jobs/{jobId}/boms collection. Allows authenticated users to read, create, update, and delete BOMs within a specific job.
       * @path /jobs/{jobId}/boms/{bomId}
       * @allow get, list: if true;
       * @allow create: if isSignedIn();
       * @allow update: if isSignedIn() && resource != null;
       * @allow delete: if isSignedIn() && resource != null;
       * @principle Allows authenticated users to manage BOMs within a specific job.
       */
      match /boms/{bomId} {
        allow get, list: if true;
        allow create: if isSignedIn();
        allow update: if isSignedIn() && resource != null;
        allow delete: if isSignedIn() && resource != null;
      }
    }

    /**
     * @description Rules for the /itemCategories collection. Allows authenticated users to read, create, update, and delete item categories.
     * @path /itemCategories/{itemCategoryId}
     * @allow get, list: if true;
     * @allow create: if isSignedIn();
     * @allow update: if isSignedIn() && resource != null;
     * @allow delete: if isSignedIn() && resource != null;
     * @principle Allows authenticated users to manage item categories.
     */
    match /itemCategories/{itemCategoryId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    /**
     * @description Rules for the /inventoryItems collection. Allows authenticated users to read, create, update, and delete inventory items.
     * @path /inventoryItems/{inventoryItemId}
     * @allow get, list: if true;
     * @allow create: if isSignedIn();
     * @allow update: if isSignedIn() && resource != null;
     * @allow delete: if isSignedIn() && resource != null;
     * @principle Allows authenticated users to manage inventory items.
     */
    match /inventoryItems/{inventoryItemId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    /**
     * @description Rules for the /shelfLocations collection. Allows authenticated users to read, create, update, and delete shelf locations.
     * @path /shelfLocations/{shelfLocationId}
     * @allow get, list: if true;
     * @allow create: if isSignedIn();
     * @allow update: if isSignedIn() && resource != null;
     * @allow delete: if isSignedIn() && resource != null;
     * @principle Allows authenticated users to manage shelf locations.
     */
    match /shelfLocations/{shelfLocationId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}